#include<bits/stdc++.h>
#include <iterator>
#include <iostream>
#include <numeric>
#include <math.h>
#define ll long long
#define ull long
#define mpa make_pair
#define pb push_back
#define ff first
#define pii pair<ll,ll>
#define dd double
#define trace(x) cerr << #x << " : " << x << endl
#define ss second
#define boost ios_base::sync_with_stdio(0)
#define forp(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,n)    for(ll i=0;i<n;++i)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(ll i=a;i>=b;i--)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end();
#define sc(x) scanf("%lld",&x)
#define clr(x,val) memset(x,val,sizeof(x))
#define pr(x) printf("%lld\n",x) 
#define pdd pair<dd,dd>
#define read_arr(a,n) for(ll i=1;i<=n;i++)cin>>a[i];
#define init_arr(a,n) for(ll i=1;i<=n;i++)a[i]=n-i+1;
#define prec(x) cout<<fixed<<setprecision(x)
#define fre freopen("input.txt","r",stdin),freopen("output.txt","w",stdout)
#define arr array 
using namespace std;


vector<ll> lps(string s){
	ll n=s.size();
	vector<ll> a(n);

	a[0]=0;

	ll i=1;
	ll len=0;
	while(i<n){
		if(s[i]==s[len]){
			len++;
			a[i]=len;
			i++;
		}else{
			if(len!=0){
				len=a[len-1];
			}else{
				len=0;
				i++;
			}
		}
	}
	return a;
}
void solve(ll tc){
	string s,t;
	
	cin>>s>>t;

	ll c1=0,c0=0;
	ll c1_req=0,c0_req=0;


	
	for(ll i=0;i<s.size();i++)c1+=(s[i]-'0'),c0+=(s[i]=='0');
	for(ll i=0;i<t.size();i++)c1_req+=(t[i]-'0'),c0_req+=(t[i]=='0');
	
	vector<ll> lps_array=lps(t);

	ll n=t.size();
	vector<ll> cnt_z(n),cnt_o(n);

	if(c1<c1_req or c0<c0_req){
		cout<<s;
		return;
	}

	


	
	ll long_p_suffx=lps_array[n-1];
	


	ll ex_0=0;
	ll ex_1=0;
	string ex;
	string pref;


	for(ll i=0;i<n;i++){
		if(i>long_p_suffx-1){
			ex+=t[i];
			ex_0+=(t[i]=='0');
			ex_1+=(t[i]=='1');
		}else{
			pref+=t[i];
		}
	}

	if(long_p_suffx == 0){
		ex_0=c0_req;
		ex_1=c1_req;
		ex=t;
	}

	string sol;

	sol+=t;
	c1-=c1_req;
	c0-=c0_req;


	//cout<<long_p_suffx<<" "<<ex<<endl;

	
	while(c1>=ex_1 and c0>=ex_0){
		c1-=ex_1;
		c0-=ex_0;
		sol+=ex;
	}

	while(c1--)sol+='1';
	while(c0--)sol+='0';

	cout<<sol;
	
}
	

int main(){

	boost;
	ll t=1;
	


	t=1;
	ll tc=1;

	while(t--){
		solve(tc);
		tc++;
	}
	

}
	
	
 
 
 
 


	

	







	
	

	
	




		


    
	


		
